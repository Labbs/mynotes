name: Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
      version:
        description: 'Version to deploy'
        required: true
        default: 'latest'

permissions:
  contents: write
  packages: read

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate a token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: "1006020"
          private-key: ${{ secrets.GH_INTERNAL_REPO_ACCESS_APP_PEM }}
          owner: "labbs"

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Set Git config
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

      # get latest version if the input is 'latest'
      - name: Get latest version
        id: get_version
        if: ${{ github.event.inputs.version == 'latest' }}
        run: echo "version=$(gh api /repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Update environment with the tag
        run: yq -i '.image.tag = "${{ steps.get_version.outputs.version }}"' .infrastructure/helm/values-${{ github.event.inputs.environment }}-override.yaml

      - name: Get variables
        id: get_variables
        shell: bash
        run: |
          set -x
          echo "datetime=$(date '+%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Update pull request
        continue-on-error: true
        uses: peter-evans/create-pull-request@v6
        id: cpr
        with:
          token: ${{ steps.app-token.outputs.token }}
          commit-message: "auto: update tag to ${{ steps.get_version.outputs.version }} for ${{ github.event.inputs.environment }} environment"
          title: "auto: update tag to ${{ steps.get_version.outputs.version }} for ${{ github.event.inputs.environment }} environment"
          body: >
            This PR is updated automatically by the GitHub Action workflow.
          branch: "auto/update-tag-${{ github.event.inputs.environment }}-${{ steps.get_variables.outputs.datetime }}"
          base: "main"

      - name: Merge pull request
        continue-on-error: true
        if: steps.cpr.outputs.pull-request-operation == 'created' ||
            steps.cpr.outputs.pull-request-operation == 'updated'
        uses: nick-fields/retry@v3
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        with:
          timeout_seconds: 5
          max_attempts: 12
          retry_on: error
          command: gh pr merge ${{ steps.cpr.outputs.pull-request-number }} --repo ${{ github.repository }} --squash --delete-branch --admin
